plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace = "com.example.balian"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    signingConfigs {
        release {
            keyAlias = keystoreProperties['keyAlias']
            keyPassword = keystoreProperties['keyPassword']
            storeFile = keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword = keystoreProperties['storePassword']     
        }
    }

    namespace "id.my.sod.m"
    defaultConfig {
        applicationId = "id.my.sod.m"
        minSdk = flutter.minSdkVersion
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            minifyEnabled true
            shrinkResources true
        }
    }

    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            if (variant.buildType.name == "release") {
                // Mengubah nama file APK
                if (output.outputFile.name.endsWith(".apk")) {
                    def newName = "balian-${variant.versionName}.apk"
                    output.outputFileName = newName
                }

                // Mengubah nama file AAB
                if (output.outputFile.name.endsWith(".aab")) {
                    output.outputFileName = "balian-${variant.versionName}.aab"
                }
            }
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
    }

    lintOptions {
        baseline file("lint-baseline.xml")
    }
}

flutter {
    source = "../.."
}

dependencies {
    implementation 'com.google.api-client:google-api-client:1.31.5' 
    implementation 'com.google.crypto.tink:tink-android:1.7.0' 
    implementation 'joda-time:joda-time:2.10.14'

    implementation 'com.google.errorprone:error_prone_annotations:2.8.1'
    implementation 'com.squareup.okhttp3:okhttp:4.9.1'
    implementation 'commons-logging:commons-logging:1.2'

}
